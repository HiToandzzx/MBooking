import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:rxdart/rxdart.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../model/model_stripe.dart';

class PaymentStripeViewModel {
  final _statusSubject = BehaviorSubject<String?>();
  final _clientSecretSubject = BehaviorSubject<String?>();

  Stream<String?> get statusStream => _statusSubject.stream;
  Stream<String?> get clientSecretStream => _clientSecretSubject.stream;

  void dispose() {
    _statusSubject.close();
    _clientSecretSubject.close();
  }

  Future<void> fetchPaymentStripe({
    required String orderId,
    required String amount,
    required int bookingId,
  }) async {
    const url = 'https://lolifashion.social/api/create-payment';

    try {
      final prefs = await SharedPreferences.getInstance();
      final token = prefs.getString('token');

      final response = await http.post(
        Uri.parse(url),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $token',
          'Accept': 'application/json',
        },
        body: jsonEncode({
          'order_id': orderId,
          'amount': amount,
          'booking_id': bookingId,
        }),
      );

      if (response.statusCode == 200) {
        final data = json.decode(response.body);

        final payment = AutogeneratedStripe.fromJson(data);

        _statusSubject.add(payment.status);
        _clientSecretSubject.add(payment.clientSecret);
      } else {
        _statusSubject.addError('Failed to fetch payment information');
        _clientSecretSubject.addError('Failed to fetch payment information');
      }
    } catch (e) {
      _statusSubject.addError('An error occurred: $e');
      _clientSecretSubject.addError('An error occurred: $e');
    }
  }
}
