import 'dart:convert';
import 'package:rxdart/rxdart.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';
import '../model/model_payments.dart';

class PaymentsViewModel {
  final _paymentsController = BehaviorSubject<AutogeneratedPayments>();
  final _loadingController = BehaviorSubject<bool>();
  final _errorController = BehaviorSubject<String?>();

  Stream<AutogeneratedPayments> get paymentsStream => _paymentsController.stream;
  Stream<bool> get loadingStream => _loadingController.stream;
  Stream<String?> get errorStream => _errorController.stream;

  Future<void> fetchPayments({
    required String? seatIds,
    required int? showtimeId,
    required int? amount,
  }) async {
    _loadingController.add(true);

    try {
      final prefs = await SharedPreferences.getInstance();
      final token = prefs.getString('token');

      if (token == null) {
        _errorController.add('User is not authenticated.');
        return;
      }

      final url = Uri.parse('https://lolifashion.social/api/purchase?seat_id=$seatIds&showtime_id=$showtimeId&amount=$amount');

      final response = await http.post(
        url,
        headers: {
          'Accept': 'application/json',
          'Authorization': 'Bearer $token',
          'Content-Type': 'application/json',
        },
      );

      print("Response status: ${response.statusCode}");
      print("Response body: ${response.body}");

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        final payments = AutogeneratedPayments.fromJson(data);
        print("Parsed tickets: $payments");
        _paymentsController.add(payments);
      } else {
        final error = jsonDecode(response.body)['message'] ?? "Unknown error";
        print("Error: $error");
        _errorController.add(error);
      }
    } catch (e) {
      print("Exception: $e");
      _errorController.add(e.toString());
    } finally {
      _loadingController.add(false);
    }
  }

  void dispose() {
    _paymentsController.close();
    _loadingController.close();
    _errorController.close();
  }
}



