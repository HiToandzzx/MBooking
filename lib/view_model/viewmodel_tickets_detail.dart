import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:rxdart/rxdart.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../model/model_tickets_detail.dart';

class TicketsDetailViewModel {
  final _ticketsDetailSubject = BehaviorSubject<DataTicketsDetail>();
  final _errorSubject = BehaviorSubject<String>();

  Stream<DataTicketsDetail> get ticketsDetailStream => _ticketsDetailSubject.stream;
  Stream<String> get errorStream => _errorSubject.stream;

  Future<void> fetchTicketsDetail(int bookingId) async {
    final url = Uri.parse('https://lolifashion.social/api/ticket/?booking_id=$bookingId');

    try {
      final prefs = await SharedPreferences.getInstance();
      final token = prefs.getString('token');

      if (token == null) {
        _errorSubject.add('User is not authenticated.');
        return;
      }

      final response = await http.get(
        url,
        headers: {
          'Accept': 'application/json',
          'Authorization': 'Bearer $token',
        },
      );

      if (response.statusCode == 200) {
        final jsonData = json.decode(response.body);
        final tickets = AutogeneratedTicketsDetail.fromJson(jsonData);
        if (tickets.data != null) {
          _ticketsDetailSubject.add(tickets.data!);
        } else {
          _errorSubject.add('No data found');
        }
      } else {
        _errorSubject.add('Failed to fetch data: ${response.reasonPhrase}');
      }
    } catch (e) {
      _errorSubject.add('An error occurred: $e');
    }
  }

  void dispose() {
    _ticketsDetailSubject.close();
    _errorSubject.close();
  }
}

