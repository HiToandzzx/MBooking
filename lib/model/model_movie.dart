/*
class AutoGenerated {
  Dates? dates;
  int? page;
  List<Results>? results;
  int? totalPages;
  int? totalResults;

  AutoGenerated({
    this.dates,
    this.page,
    this.results,
    this.totalPages,
    this.totalResults,
  });

  AutoGenerated.fromJson(Map<String, dynamic> json) {
    dates = json['dates'] != null ? new Dates.fromJson(json['dates']) : null;
    page = json['page'];
    if (json['results'] != null) {
      results = <Results>[];
      json['results'].forEach((v) {
        results!.add(new Results.fromJson(v));
      });
    }
    totalPages = json['total_pages'];
    totalResults = json['total_results'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.dates != null) {
      data['dates'] = this.dates!.toJson();
    }
    data['page'] = this.page;
    if (this.results != null) {
      data['results'] = this.results!.map((v) => v.toJson()).toList();
    }
    data['total_pages'] = this.totalPages;
    data['total_results'] = this.totalResults;
    return data;
  }
}

class Dates {
  String? maximum;
  String? minimum;

  Dates({this.maximum, this.minimum});

  Dates.fromJson(Map<String, dynamic> json) {
    maximum = json['maximum'];
    minimum = json['minimum'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['maximum'] = this.maximum;
    data['minimum'] = this.minimum;
    return data;
  }
}

class Results {
  bool? adult;
  String? backdropPath;
  List<int>? genreIds;
  int? id;
  String? originalLanguage;
  String? originalTitle;
  String? overview;
  double? popularity;
  String? posterPath;
  String? releaseDate;
  String? title;
  bool? video;
  double? voteAverage;
  int? voteCount;

  Results({
    this.adult,
    this.backdropPath,
    this.genreIds,
    this.id,
    this.originalLanguage,
    this.originalTitle,
    this.overview,
    this.popularity,
    this.posterPath,
    this.releaseDate,
    this.title,
    this.video,
    this.voteAverage,
    this.voteCount
  });

  Results.fromJson(Map<String, dynamic> json) {
    adult = json['adult'];
    backdropPath = json['backdrop_path'];
    genreIds = json['genre_ids'].cast<int>();
    id = json['id'];
    originalLanguage = json['original_language'];
    originalTitle = json['original_title'];
    overview = json['overview'];
    popularity = json['popularity'];
    posterPath = json['poster_path'];
    releaseDate = json['release_date'];
    title = json['title'];
    video = json['video'];
    voteAverage = json['vote_average'];
    voteCount = json['vote_count'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['adult'] = this.adult;
    data['backdrop_path'] = this.backdropPath;
    data['genre_ids'] = this.genreIds;
    data['id'] = this.id;
    data['original_language'] = this.originalLanguage;
    data['original_title'] = this.originalTitle;
    data['overview'] = this.overview;
    data['popularity'] = this.popularity;
    data['poster_path'] = this.posterPath;
    data['release_date'] = this.releaseDate;
    data['title'] = this.title;
    data['video'] = this.video;
    data['vote_average'] = this.voteAverage;
    data['vote_count'] = this.voteCount;
    return data;
  }
}
*/

class ListMovie {
  String? status;
  String? message;
  List<Data>? data;

  ListMovie({this.status, this.message, this.data});

  ListMovie.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message'];
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    data['message'] = this.message;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  int? id;
  String? filmName;
  String? thumbnail;
  int? duration;
  double? review;
  String? storyLine;
  String? trailerLink;
  String? movieGenre;
  String? censorship;
  String? language;
  String? director;
  String? actor;
  int? status;
  String? release;

  Data(
      {this.id,
        this.filmName,
        this.thumbnail,
        this.duration,
        this.review,
        this.storyLine,
        this.trailerLink,
        this.movieGenre,
        this.censorship,
        this.language,
        this.director,
        this.actor,
        this.status,
        this.release});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    filmName = json['film_name'];
    thumbnail = json['thumbnail'];
    duration = json['duration'];
    review = json['review'];
    storyLine = json['story_line'];
    trailerLink = json['trailer_link'];
    movieGenre = json['movie_genre'];
    censorship = json['censorship'];
    language = json['language'];
    director = json['director'];
    actor = json['actor'];
    status = json['status'];
    release = json['release'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['film_name'] = this.filmName;
    data['thumbnail'] = this.thumbnail;
    data['duration'] = this.duration;
    data['review'] = this.review;
    data['story_line'] = this.storyLine;
    data['trailer_link'] = this.trailerLink;
    data['movie_genre'] = this.movieGenre;
    data['censorship'] = this.censorship;
    data['language'] = this.language;
    data['director'] = this.director;
    data['actor'] = this.actor;
    data['status'] = this.status;
    data['release'] = this.release;
    return data;
  }
}
